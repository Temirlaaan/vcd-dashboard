#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
–ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –ø–∞–ø–∫–µ backend/
"""

import requests
import json
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()

def test_backend():
    print("=" * 60)
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Backend –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞:")
    print("-" * 40)
    
    username = os.getenv("ADMIN_USERNAME")
    password_hash = os.getenv("ADMIN_PASSWORD_HASH")
    secret_key = os.getenv("SECRET_KEY")
    
    if not username:
        print("‚ùå ADMIN_USERNAME –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return
    else:
        print(f"‚úÖ ADMIN_USERNAME: {username}")
    
    if not password_hash:
        print("‚ùå ADMIN_PASSWORD_HASH –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return
    else:
        print(f"‚úÖ ADMIN_PASSWORD_HASH: {password_hash[:20]}...")
    
    if not secret_key:
        print("‚ùå SECRET_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return
    else:
        print(f"‚úÖ SECRET_KEY: {secret_key[:20]}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å backend
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Backend:")
    print("-" * 40)
    
    base_url = "http://localhost:8000"
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
        response = requests.get(f"{base_url}/api/health", timeout=5)
        if response.status_code == 200:
            print(f"‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ {base_url}")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ö†Ô∏è  Backend –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: {response.status_code}")
    except requests.exceptions.ConnectionError:
        print(f"‚ùå Backend –ù–ï –ó–ê–ü–£–©–ï–ù –∏–ª–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ {base_url}")
        print("\nüîß –†–µ—à–µ–Ω–∏–µ:")
        print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª")
        print("   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É backend/")
        print("   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python app.py")
        return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    print("\n3. –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:")
    print("-" * 40)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∞
    test_password = input(f"–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{username}': ")
    
    # –ü—Ä–æ–±—É–µ–º –∑–∞–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è
    login_data = {
        "username": username,
        "password": test_password
    }
    
    try:
        print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ {base_url}/api/login")
        print(f"   –î–∞–Ω–Ω—ã–µ: username={username}, password=***")
        
        response = requests.post(
            f"{base_url}/api/login",
            json=login_data,
            headers={"Content-Type": "application/json"},
            timeout=5
        )
        
        print(f"\nüì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê!")
            print(f"   –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {data['access_token'][:50]}...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—ã–π endpoint
            print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º:")
            print("-" * 40)
            
            headers = {"Authorization": f"Bearer {data['access_token']}"}
            verify_response = requests.get(f"{base_url}/api/verify", headers=headers)
            
            if verify_response.status_code == 200:
                print("‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç, –¥–æ—Å—Ç—É–ø –∫ API –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!")
                print(f"   –î–∞–Ω–Ω—ã–µ: {verify_response.json()}")
            else:
                print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                
        elif response.status_code == 401:
            print("‚ùå –ù–ï–í–ï–†–ù–´–ô –õ–û–ì–ò–ù –ò–õ–ò –ü–ê–†–û–õ–¨")
            error_detail = response.json().get('detail', 'Unknown error')
            print(f"   –û—à–∏–±–∫–∞: {error_detail}")
            print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å")
            print("   2. –•–µ—à –ø–∞—Ä–æ–ª—è –≤ .env –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É –ø–∞—Ä–æ–ª—é")
            print("   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ö–µ—à —á–µ—Ä–µ–∑ setup_auth.py")
            
        elif response.status_code == 422:
            print("‚ùå –û–®–ò–ë–ö–ê –í–ê–õ–ò–î–ê–¶–ò–ò –î–ê–ù–ù–´–•")
            print(f"   –î–µ—Ç–∞–ª–∏: {response.json()}")
            print("\nüîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
            
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.status_code}")
            print(f"   –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ backend")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω (python app.py)")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    
    print("\n" + "=" * 60)
    print("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
    print("=" * 60)

if __name__ == "__main__":
    test_backend()